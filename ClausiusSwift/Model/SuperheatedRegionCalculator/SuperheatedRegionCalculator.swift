//
//  SuperheatedRegionCalculator.swift
//  ClausiusSwift
//
//  Created by Austin Carrig on 5/23/22.
//

struct SuperheatedRegionCalculator {

    /*
     * Calculate the "tertiary value", which is a non-primary field (v, u, h, s),
     * using the 2 primary fields (T, P). This calculation is only relevant in the
     * superheated region, because T and P are directly correlated in the saturated
     * region.
     *
     * The fields are calculated through 2D interpolation from a table which was
     * generated by running H2OWagnerPruss in a grid and saving off the results.
     *
     */
    static func calculateTertiaryValue(with primaryValue: Double,
                                       and  secondaryValue: Double,
                                       for  chartType: ChartType) throws -> Double {
        switch chartType {
            case .Ts:
                return try Interpolator.interpolateY2D(
                    array2D: SuperheatedRegionCalculatorConstantsTS.ENTROPY,
                    xArray: SuperheatedRegionCalculatorConstantsTS.TEMPERATURE,
                    yArray: SuperheatedRegionCalculatorConstantsTS.PRESSURE,
                    xValue: primaryValue,
                    array2DValue: secondaryValue
                )
            case .Pv:
                return try Interpolator.interpolateY2D(
                    array2D: SuperheatedRegionCalculatorConstantsPV.SPECIFIC_VOLUME,
                    xArray: SuperheatedRegionCalculatorConstantsPV.PRESSURE,
                    yArray: SuperheatedRegionCalculatorConstantsPV.TEMPERATURE,
                    xValue: primaryValue,
                    array2DValue: secondaryValue
                )
            case .Ph:
                return try Interpolator.interpolateY2D(
                    array2D: SuperheatedRegionCalculatorConstantsPH.ENTHALPY,
                    xArray: SuperheatedRegionCalculatorConstantsPH.PRESSURE,
                    yArray: SuperheatedRegionCalculatorConstantsPH.TEMPERATURE,
                    xValue: primaryValue,
                    array2DValue: secondaryValue
                )
        }
    }
}
